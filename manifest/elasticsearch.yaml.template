apiVersion: batch/v1
kind: Job
metadata:
  name: tsb-elastic-installer-job
  labels:
    app.kubernetes.io/name: $name
    app.kubernetes.io/component: tsb-elastic-installer-job
spec:
  ttlSecondsAfterFinished: 1800
  backoffLimit: 0
  completions: 1
  parallelism: 1
  template:
    spec:
      serviceAccountName: $service_account
      containers:
      - command:
        - "/bin/bash"
        - "-ec"
        - |
          set -euxo pipefail
          export REPO=$tsbImageRepo
          export TAG=$tsbImageTag
          export NAMESPACE=$namespace
          echo ">>>1 Expand artifact templates with $REPO $TAG"
          envsubst '$REPO $TAG' < /data/artifacts/operator.templt > /data/artifacts/operator.yaml
          echo ">>>2 Installing ElasticSearch"
          kubectl apply -f /data/artifacts/crds.yaml
          kubectl apply -f /data/artifacts/operator.yaml
          kubectl -n elastic-system wait --for condition=ready --timeout=120s pod/elastic-operator-0
          kubectl apply -f /data/artifacts/elastic.yaml
          printf "Waiting for elastic-pods  to become ready "
          while ! kubectl wait pod -n elastic  --for condition=ready --timeout=60s --all; do
            echo "waiting for elasticsearch!"
            sleep 2
          done
          export ELASTIC_PASS=$(kubectl get secret -n elastic tsb-es-elastic-user -o go-template='{{ .data.elastic | base64decode }}')
          kubectl get secret -n elastic tsb-es-http-certs-public -o go-template='{{ index .data "ca.crt" | base64decode}}' > /data/artifacts/es-ca-cert.pem
        image: $tsbImageRepo/deployer:$tsbImageTag
        imagePullPolicy: Always
        name: tsb-elastic-installer
      dnsPolicy: ClusterFirst
      restartPolicy: Never
      

